services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - back-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - back-tier
      - front-tier

  mlflow:
    build:
      context: mlflow
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST_DOCKER}
      POSTGRES_DB: ${POSTGRES_DB}
      AZURE_STORAGE_CONNECTION_STRING: ${AZURE_STORAGE_CONNECTION_STRING}
      MLFLOW_ARTIFACT_ROOT: ${MLFLOW_ARTIFACT_URL}
    networks:
      - back-tier
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy

  prediction_service:
    build:
      context: prediction_service
      dockerfile: Dockerfile
    restart: always
    environment:
      MLFLOW_TRACKING_URL: ${MLFLOW_TRACKING_URL_DOCKER}
      MLFLOW_MODEL_REGISTRY_NAME: ${MLFLOW_MODEL_REGISTRY_NAME}
      AZURE_STORAGE_CONNECTION_STRING: ${AZURE_STORAGE_CONNECTION_STRING}
    networks:
      - back-tier
    ports:
      - "9696:9696"
    entrypoint: gunicorn --bind=0.0.0.0:9696 app:app


  grafana:
    image: grafana/grafana
    restart: always
    user: "0"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - back-tier
      - front-tier

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus/prometheus_data'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped

volumes:
  grafana_data:

networks:
  front-tier: {}
  back-tier: {}
